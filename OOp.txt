Inheritance allows us to define a class that inherits all the methods and properties from another class.
Inheritance is a powerful feature in object oriented programming.


1. It represents real-world relationships well.

2. It provides reuse ability of a code. We donâ€™t have to write the same code again and again.
Also, it allows us to add more features to a class without modifying it.

3.It is transitive in nature, which means that if class B inherits from another class A,
 then all the subclasses of B would automatically inherit from class A.
Parent class is the class being inherited from, also called base class.

Child class is the class that inherits from another class, also called derived class.


-Create a Parent Class or Base class
Any class can be a parent class, so the syntax is the same as creating any other class:

-Create a Child Class or Sub class
To create a class that inherits the functionality from another class, send the parent class as a parameter

Note: Use the pass keyword when you do not want to add any other properties or methods to the class.




**Adding __init__
When you add the __init__() function, the child class will no longer inherit the parent's __init__() function.


The child's __init__() function overrides the inheritance of the parent's __init__() function.

To keep the inheritance of the parent's __init__() function, add a call to the parent's __init__() function:


Now we have successfully added the __init__() function, and kept the inheritance of the parent class,
and we are ready to add functionality in the __init__() function.









